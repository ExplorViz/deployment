# ExplorViz Java Backend

# Start: `docker compose up -d`
# Stop + remove volumes: `docker compose down -v`

# To use native images instead of jvm-based images either modify .env file
# or start with `EXPLORVIZ_JAVA_IMAGE_TYPE=native docker compose up -d`

# Using custom .env file, e.g., `docker compose --env-file .env-custom up -d`

include:
  - ./compose/compose.base.yaml

services:

  adapter-service:
    hostname: adapter-service
    image: explorviz/adapter-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:latest
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_started
    environment:
      - QUARKUS_KAFKA_STREAMS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - EXPLORVIZ_LOG_LVL=DEBUG
      - EXPLORVIZ_VALIDATE_TOKEN_EXISTENCE=true
    deploy:
      mode: replicated
      replicas: ${ADAPTER_REPLICAS}

  span-service:
    hostname: span-service
    image: explorviz/span-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:latest
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      init-cassandra:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      schema-registry:
        condition: service_started
    ports:
    - ${SPAN_PORT}:8080
    environment:
      - QUARKUS_CASSANDRA_CONTACT_POINTS=cassandra:9042
      - QUARKUS_CASSANDRA_AUTH_USERNAME=cassandra
      - QUARKUS_CASSANDRA_AUTH_PASSWORD=cassandra
      - QUARKUS_CASSANDRA_REQUEST_TIMEOUT=10
      - QUARKUS_KAFKA_STREAMS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - EXPLORVIZ_LOG_LVL=DEBUG
      - EXPLORVIZ_SPAN_API_TIME_RANGES_ENABLED=true
    deploy:
      mode: replicated
      replicas: ${SPAN_REPLICAS}

  user-service:
    hostname: user-service
    image: explorviz/user-service-${EXPLORVIZ_JAVA_IMAGE_TYPE}:latest
    env_file:
       - path: ./.env
       - path: ./.env-custom
         required: false
    depends_on:
      init-kafka:
        condition: service_completed_successfully
      kafka:
        condition: service_healthy
      mongo-user:
        condition: service_started
      schema-registry:
        condition: service_started
    ports:
    - ${USER_PORT}:8080
    environment:
      - QUARKUS_OIDC_ENABLED=false
      - QUARKUS_HTTP_CORS=true
      - QUARKUS_HTTP_CORS_ORIGINS=*
      - INIT_TOKEN_ENABLED=true
      - INIT_TOKEN_VALUE=mytokenvalue
      - INIT_TOKEN_SECRET=mytokensecret
      - MP_MESSAGING_OUTGOING_TOKEN_EVENTS_SCHEMA_REGISTRY_URL=http://schema-registry:8081
      - QUARKUS_MONGODB_CONNECTION_STRING=mongodb://mongo-user:27017
      - EXPLORVIZ_LOG_LVL=DEBUG
