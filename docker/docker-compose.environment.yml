# docker-compose -f docker-compose.environment.yml pull

# docker-compose -f docker-compose.environment.yml up -d

# docker-compose -f docker-compose.explorviz.yml -f docker-compose.environment.yml down -v

# docker-compose --env-file .env-custom -f docker-compose.environment.yml -f docker-compose.explorviz.yml up -d

version: "3.5"

services:

  ## Kafka ##

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    hostname: kafka
    ports:
      - "${KAFKA_EXT_PORT}:${KAFKA_EXT_PORT}"
      - "${KAFKA_JMX_PORT}:${KAFKA_JMX_PORT}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:${KAFKA_INT_PORT},PLAINTEXT_HOST://localhost:${KAFKA_EXT_PORT}'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: ${KAFKA_JMX_PORT}
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:${KAFKA_INT_PORT},CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:${KAFKA_EXT_PORT}'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
    volumes:
      - kafka-data:/var/lib/kafka/data
      - kafka-secrets:/etc/kafka/secrets
      - ./generic/kafka/kafka_kraft_init.sh:/tmp/update_run.sh
    command: "bash -c 'if [ ! -f /tmp/update_run.sh ]; then echo \"ERROR: Did you forget the kafka_kraft_init.sh file that came with this docker-compose.yml file?\" && exit 1 ; else /tmp/update_run.sh && /etc/confluent/docker/run ; fi'"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "kafka:${KAFKA_INT_PORT}", "--list"]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - explorviz

  init-kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_INT_PORT
    entrypoint: [ '/bin/sh', '-c' ]
    volumes:
      - init-kafka-data:/var/lib/kafka/data
      - init-kafka-secrets:/etc/kafka/secrets
      - ./generic/kafka/init_kafka_topics.sh:/tmp/init_kafka_topics.sh
    command: "/tmp/init_kafka_topics.sh"
    networks:
      - explorviz

  schema-registry:
    hostname: schema-registry
    image: confluentinc/cp-schema-registry:7.3.0
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - ${SCHEMA_REGISTRY_PORT}:8081
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:${KAFKA_INT_PORT}
      SCHEMA_REGISTRY_HOST_NAME: 127.0.0.1
    volumes:
      - schema-registry:/etc/schema-registry/secrets
    networks:
      - explorviz

  ## Open Telemetry ##

  otel-collector:
    image: otel/opentelemetry-collector
    hostname: otel-collector
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    restart: on-failure
    volumes:
      - ./generic/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - ${OTEL_COLLECTOR_PORT}:55678
      - ${OTEL_COLLECTOR_ZPAGES_PORT}:55679 # zPages
    depends_on:
      schema-registry:
        condition: service_started
      cassandra:
        condition: service_healthy
      init-kafka:
        condition: service_completed_successfully
      init-cassandra:
        condition: service_completed_successfully
    networks:
      - explorviz

  ## Cassandra for Landscape and Trace Service ##

  cassandra:
    hostname: cassandra-explorviz
    image: cassandra:3.11.14
    ports:
      - ${CASSANDRA_PORT}:9042
    environment:
      - MAX_HEAP_SIZE=1G
      - HEAP_NEWSIZE=200M
    volumes:
      - ./generic/cassandra/setup.cql:/setup.cql
    healthcheck:
      test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
      interval: 15s
      timeout: 10s
      retries: 10
    networks:
      - explorviz

  init-cassandra:
      image: cassandra:3.11.14
      depends_on:
        cassandra:
          condition: service_healthy
      volumes:
      - ./generic/cassandra/setup.cql:/setup.cql
      command: "cqlsh cassandra-explorviz -f /setup.cql"
      networks:
        - explorviz

  ## User-Service ##

  mongo-user:
    image: mongo
    hostname: user-mongo
    ports:
      - ${MONGO_USER_SERV_PORT}:27017
    volumes:
      - user-mongo-data:/data/db
      - user-mongo-configdb:/data/configdb
    networks:
      - explorviz

# Volumes
# Delete all ExplorViz volumes:
# docker volume rm $(docker volume ls -f name=explorviz -q)

volumes:
  kafka-data:
    name: explorviz-kafka-data
  kafka-secrets:
    name: explorviz-kafka-secrets
  init-kafka-data:
    name: explorviz-init-kafka-data
  init-kafka-secrets:
    name: explorviz-init-kafka-secrets
  schema-registry:
    name: explorviz-schema-registry
  user-mongo-data:
    name: explorviz-mongo-user-data
  user-mongo-configdb:
    name: explorviz-mongo-user-config
  cassandra:
    name: explorviz-cassandra

networks:
  explorviz:
    name: explorviz
