variables:
  DEFAULT_TAG: exec-docker

default:
  tags:
    - $DEFAULT_TAG

.build-and-deploy:
  stage: deploy:images
  variables:
    DOCKERHUB_TAG: "amd64"
    DOCKER_CONTEXT_PATH: $CI_PROJECT_DIR
    IMAGE_NAME: $DOCKERHUB_IMAGE_NAME
    DOCKERFILE_NAME: "Dockerfile"
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - if: $ARM64_BUILD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CONTAINER_REGISTRY_URL\":{\"auth\":\"$(echo -n ${DOCKERHUB_USERNAME}:${DOCKERHUB_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --context=$DOCKER_CONTEXT_PATH
      --dockerfile=${DOCKER_CONTEXT_PATH}/${DOCKERFILE_NAME}
      --destination=$DOCKERHUB_ORGANIZATION/${IMAGE_NAME}:${DOCKERHUB_TAG}

.build-and-deploy-quarkus-native:
  stage: deploy:images
  image: explorviz/ubi-quarkus-mandrel-builder-image
  variables:
    IMAGE_NAME: $DOCKERHUB_IMAGE_NAME_NATIVE
    IMAGE_TAG: "latest"
  rules:
    - if: $ARM64_BUILD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - ./gradlew clean assemble
      -Dquarkus.package.type=native -Dquarkus.container-image.push=true
      -Dquarkus.container-image.name=$DOCKERHUB_IMAGE_NAME_NATIVE
      -Dquarkus.container-image.tag=$IMAGE_TAG
      -Dquarkus.native.additional-build-args="--initialize-at-run-time=org.apache.kafka.common.security.authenticator.SaslClientAuthenticator\\,org.apache.kafka.common.security.oauthbearer.internals.expiring.ExpiringCredentialRefreshingLogin"
      -Dquarkus.container-image.username=$DOCKERHUB_USERNAME
      -Dquarkus.container-image.password=$DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/${DOCKERHUB_IMAGE_NAME_NATIVE}:${IMAGE_TAG}"

.build-and-deploy-quarkus-jvm:
  stage: deploy:images
  variables:
    IMAGE_NAME: $DOCKERHUB_IMAGE_NAME
    IMAGE_TAG: "latest"
  rules:
    - if: $ARM64_BUILD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  script:
    - ./gradlew clean assemble
      -Dquarkus.container-image.build=true
      -Dquarkus.container-image.push=true
      -Dquarkus.container-image.name=$IMAGE_NAME
      -Dquarkus.container-image.tag=$IMAGE_TAG
      -Dquarkus.container-image.username=$DOCKERHUB_USERNAME
      -Dquarkus.container-image.password=$DOCKERHUB_PASSWORD
  after_script:
    - echo "Image was uploaded to Dockerhub; explorviz/${DOCKERHUB_IMAGE_NAME}::${IMAGE_TAG}"

.retag-dockerhub-image:
  stage: deploy:retagging
  image:
    name: gcr.io/go-containerregistry/crane:debug
    entrypoint: [""]
  rules:
    - if: $MULTI_ARCH_BUILD || $ARM64_BUILD
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
  variables:
    IMAGE_NAME: ${DOCKERHUB_IMAGE_NAME}
    SOURCE_TAG: "latest"
    TARGET_TAG: $CI_COMMIT_SHORT_SHA
  script:
    - crane auth login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD "index.docker.io"
    - crane cp $DOCKERHUB_ORGANIZATION/$DOCKERHUB_IMAGE_NAME:$SOURCE_TAG $DOCKERHUB_ORGANIZATION/$DOCKERHUB_IMAGE_NAME:$TARGET_TAG

.retag-as-multi-arch-dockerhub-image:
  image:
    name: mplatform/manifest-tool:alpine
    entrypoint: [""]
  stage: deploy:retagging
  rules:
    - if: $MULTI_ARCH_BUILD || $ARM64_BUILD
  variables:
    MANIFEST_PLATFORMS: "linux/amd64,linux/arm64/v8"
    IMAGE_NAME: ${DOCKERHUB_IMAGE_NAME}
    TARGET_TAG: "latest"
    TAG_PREFIX: ""
  script:
    - manifest-tool
      --username ${DOCKERHUB_USERNAME}
      --password ${DOCKERHUB_PASSWORD}
      push from-args
      --platforms ${MANIFEST_PLATFORMS}
      --template ${DOCKERHUB_ORGANIZATION}/${IMAGE_NAME}:${TAG_PREFIX}ARCH
      --target ${DOCKERHUB_ORGANIZATION}/${IMAGE_NAME}:${TARGET_TAG}
